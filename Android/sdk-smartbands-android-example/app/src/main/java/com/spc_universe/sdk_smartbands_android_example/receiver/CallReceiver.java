package com.spc_universe.sdk_smartbands_android_example.receiver;import android.app.Service;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.database.Cursor;import android.net.Uri;import android.os.Build;import android.provider.ContactsContract;import android.telephony.TelephonyManager;import android.text.TextUtils;import android.util.Log;import com.spc_universe.sdk_smartbands_android.controller.WristBandDevice;import java.lang.ref.WeakReference;public class CallReceiver extends BroadcastReceiver {    public static final boolean D = true;    private final String TAG = this.getClass().getSimpleName();    private static String incomingNumber = null;    private WeakReference<Context> mApp;    private TelephonyManager tm;    @Override    public void onReceive(Context context, Intent intent) {        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {            if (D) Log.e(TAG, "+++ ON RECEIVE +++");            mApp = new WeakReference<Context>(context);            tm = (TelephonyManager) mApp.get().getSystemService(Service.TELEPHONY_SERVICE);            switch (tm.getCallState()) {                case TelephonyManager.CALL_STATE_RINGING:                    incomingNumber = intent.getStringExtra("incoming_number");                    Contact contact = getContact(context, incomingNumber);                    if (!"".equals(contact.getDisplayName())) {                        /**                         * send phone contact to bracelet                         * if there is name in phone book, show it or show phone number                         */                        WristBandDevice.getInstance(context).sendNotification(1, contact.getDisplayName());                    }                    break;            }        }    }    /**     *     * @param context     * @param phoneNumber     * @return     */    public static Contact getContact(Context context, String phoneNumber) {        Contact contact = new Contact(phoneNumber);        if (TextUtils.isEmpty(phoneNumber)) {            contact.setDisplayName("");        }        Cursor cursor = null;        try {            Uri uri = Uri.withAppendedPath(ContactsContract.PhoneLookup.CONTENT_FILTER_URI, Uri.encode(phoneNumber));            cursor = context.getContentResolver().query(uri, new String[]{ContactsContract.PhoneLookup.DISPLAY_NAME, ContactsContract.PhoneLookup.TYPE, ContactsContract.PhoneLookup.LABEL}, null, null, ContactsContract.PhoneLookup.DISPLAY_NAME + " LIMIT 1");            while (cursor.moveToNext()) {                contact.setDisplayName(cursor.getString(cursor.getColumnIndex(ContactsContract.PhoneLookup.DISPLAY_NAME)));                break;            }        } catch (Exception e) {            contact.setDisplayName(phoneNumber);        } finally {            if (cursor != null) {                cursor.close();            }        }        return contact;    }    public static class Contact {        private String number;        private String displayName;        public Contact(String phoneNumber) {            this.number = phoneNumber;            this.displayName = phoneNumber;        }        public String getNumber() {            return number;        }        public void setNumber(String number) {            this.number = number;        }        public String getDisplayName() {            return displayName;        }        public void setDisplayName(String displayName) {            this.displayName = displayName;        }    }}